<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.keycrafter.mapper.OrderMapper">
	<insert id="insertOrder">
		<selectKey keyProperty="onum" order="BEFORE" resultType="int">
			SELECT IFNULL(MAX(onum), 0) + 1 FROM order_info
		</selectKey>
		
		INSERT INTO order_info
			(onum, id, name, email, contact, address, zipcode, note, price,
			paymethod, payowner, paynum, payprovider, status)
		VALUES
			(#{onum}, #{id}, #{name}, #{email}, #{contact}, #{address}, #{zipCode}, #{note}, #{price},
			#{payMethod}, #{payOwner}, #{payNum}, #{payProvider}, #{status})
			
		<!-- ORACLE VER.
		<selectKey keyProperty="onum" order="BEFORE" resultType="int">
			SELECT seq_order_info.nextval FROM DUAL
		</selectKey>
		
		INSERT INTO order_info
			(onum, id, name, email, contact, address, zipcode, note, price,
			paymethod, payowner, paynum, payprovider, status)
		VALUES
			(#{onum}, #{id}, #{name}, #{email}, #{contact}, #{address}, #{zipCode}, #{note}, #{price},
			#{payMethod}, #{payOwner}, #{payNum}, #{payProvider}, #{status})
		-->
	</insert>
	
	<insert id="insertOrderProduct">
		INSERT INTO order_product
		(onum, pid, quantity)
		VALUES
		(#{onum}, #{pid}, #{quantity})
	</insert>
	
	<update id="updateOrder">
		UPDATE order_info
		SET
			name = #{name}, email = #{email}, contact = #{contact}, address = #{address}, zipcode = #{zipCode},
			note = #{note}, price = #{price}, paymethod = #{payMethod},
			payowner = #{payOwner}, paynum = #{payNum}, payprovider = #{payProvider}, status = #{status}, trackingnum = #{trackingNum}
		WHERE onum = #{onum}
	</update>
	
	<update id="cancelOrder">
		UPDATE order_info
		SET status = #{status}
		WHERE onum = #{onum}
	</update>
	
	<select id="selectOrderList" resultType="kr.co.keycrafter.domain.OrderVO">
		SELECT o.onum, o.id, o.orderdate, o.price, o.status, os.message
		FROM (
			SELECT 
				rn, onum, id, orderdate, price, status, email
			FROM (
				SELECT row_number() over(ORDER BY onum DESC) rn, onum, id, orderdate, price, status, email
				FROM order_info
			) ol
			WHERE
			
			<foreach item="keywordValue" index="i" collection="keyword">
				<trim prefix="(" suffix=") AND " prefixOverrides="OR">
					<if test='type[i].contains("I")'>
						OR id like CONCAT('%', #{keywordValue}, '%')
					</if>
					<if test='type[i].contains("N")'>
						OR name like CONCAT('%', #{keywordValue}, '%')
					</if>
					<if test='type[i].contains("T")'>
						OR contact like CONCAT('%', #{keywordValue}, '%')
					</if>
					<if test='type[i].contains("E")'>
						OR email like CONCAT('%', #{keywordValue}, '%')
					</if>
				</trim>
			</foreach>
			
			<![CDATA[
				ol.rn <= #{page} * #{show}
			]]>
		) o
		INNER JOIN order_status os
			ON o.status = os.status
		WHERE o.rn > (#{page} - 1) * #{show}
		ORDER BY onum DESC
		
	<!-- ORACLE VER.
		SELECT o.onum, o.id, o.orderdate, o.price, o.status, os.message
		FROM (
			SELECT 
				rownum rn, onum, id, orderdate, price, status, email
			FROM (
				SELECT *
				FROM order_info
				ORDER BY onum DESC 
			)
			WHERE
			
			<foreach item="keywordValue" index="i" collection="keyword">
				<trim prefix="(" suffix=") AND " prefixOverrides="OR">
					<if test='type[i].contains("I")'>
						OR id like '%'||#{keywordValue}||'%'
					</if>
					<if test='type[i].contains("N")'>
						OR name like '%'||#{keywordValue}||'%'
					</if>
					<if test='type[i].contains("T")'>
						OR contact like '%'||#{keywordValue}||'%'
					</if>
					<if test='type[i].contains("E")'>
						OR email like '%'||#{keywordValue}||'%'
					</if>
				</trim>
			</foreach>
			
			<![CDATA[
				rownum <= #{page} * #{show}
			]]>
		) o
		INNER JOIN order_status os
			ON o.status = os.status
		WHERE rn > (#{page} - 1) * #{show}
		ORDER BY onum DESC
	-->
	</select>
	
	<select id="selectOrderCount" resultType="int">
		SELECT COUNT(DISTINCT onum)
		FROM order_info
		WHERE
		
		<foreach item="keywordValue" index="i" collection="keyword">
			<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<if test='type[i].contains("I")'>
					OR id like CONCAT('%', #{keywordValue}, '%')
				</if>
				<if test='type[i].contains("N")'>
					OR name like CONCAT('%', #{keywordValue}, '%')
				</if>
				<if test='type[i].contains("T")'>
					OR contact like CONCAT('%', #{keywordValue}, '%')
				</if>
				<if test='type[i].contains("E")'>
					OR email like CONCAT('%', #{keywordValue}, '%')
				</if>
			</trim>
		</foreach>
		onum > 0
		
	<!-- ORACLE VER.
		SELECT COUNT(DISTINCT onum)
		FROM order_info
		WHERE
		
		<foreach item="keywordValue" index="i" collection="keyword">
			<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<if test='type[i].contains("I")'>
					OR id like '%'||#{keywordValue}||'%'
				</if>
				<if test='type[i].contains("N")'>
					OR name like '%'||#{keywordValue}||'%'
				</if>
				<if test='type[i].contains("T")'>
					OR contact like '%'||#{keywordValue}||'%'
				</if>
				<if test='type[i].contains("E")'>
					OR email like '%'||#{keywordValue}||'%'
				</if>
			</trim>
		</foreach>
		onum > 0
	-->
	</select>
	
	<select id="selectOrder" resultType="kr.co.keycrafter.domain.OrderVO">
		SELECT o.*, os.message
		FROM order_info o
		INNER JOIN order_status os
		ON o.status = os.status
		WHERE onum = #{onum}
	</select>
	
	<select id="selectStatusList" resultType="kr.co.keycrafter.domain.OrderStatusDTO">
		SELECT * FROM order_status
		ORDER BY status ASC
	</select>
</mapper>