<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.keycrafter.mapper.CategoryMapper">
	<insert id="insertCategory">
		INSERT INTO category
			(catnum, catname, lft, rgt)
		VALUES
			(seq_category.nextval, #{catName}, #{lft}, #{rgt})
	</insert>
	
	<select id="selectCategory" resultType="kr.co.keycrafter.domain.CategoryVO">
		SELECT * FROM category
		WHERE catnum = #{catNum}
	</select>
	
	<update id="updateRight">
		UPDATE category
		SET rgt = rgt + #{amount}
		WHERE rgt > #{leftOrRight}
	</update>
	
	<update id="updateLeft">
		UPDATE category
		SET lft = lft + #{amount}
		WHERE lft > #{leftOrRight}
	</update>
	
	<select id="selectCategoryList" resultType="kr.co.keycrafter.domain.CategoryVO">
		SELECT node.catnum, node.catname, node.lft, node.rgt, (COUNT(parent.catnum) - 1) depth
		FROM category node, category parent
		WHERE node.lft BETWEEN parent.lft AND parent.rgt
		GROUP BY node.catnum, node.catname, node.lft, node.rgt
		ORDER BY node.lft
	</select>
	
	<select id="selectCategoryPath" resultType="kr.co.keycrafter.domain.CategoryVO">
		SELECT parent.catnum, parent.catname, parent.lft
		FROM category node, category parent
		WHERE node.lft BETWEEN parent.lft AND parent.rgt
			AND node.catnum = #{catNum}
		ORDER BY parent.lft
	</select>
	
	<select id="selectCategorySubList" resultType="kr.co.keycrafter.domain.CategoryVO">
		SELECT node.catnum, node.catname, node.lft, node.rgt, (COUNT(parent.catnum) - (sub_tree.depth + 1)) depth
		FROM category node, category parent, category sub_parent,
			(
			SELECT node.catnum, (COUNT(parent.catnum) - 1) depth
			FROM category node, category parent
			WHERE node.lft BETWEEN parent.lft AND parent.rgt
				AND node.catnum = #{catNum}
			GROUP BY node.catnum, node.lft
			ORDER BY node.lft
			) sub_tree
		WHERE node.lft BETWEEN parent.lft AND parent.rgt
			AND node.lft BETWEEN sub_parent.lft AND sub_parent.rgt
			AND sub_parent.catnum = sub_tree.catnum
		GROUP BY node.catnum, node.catname, node.lft, node.rgt, sub_tree.depth
<if test="all == 0">
	<![CDATA[
		HAVING (COUNT(parent.catnum) - (sub_tree.depth + 1)) <= 1
	]]>
</if>
		ORDER BY node.lft
	</select>
	
	<select id="selectCatNum" resultType="int">
		SELECT catnum
		FROM product
		WHERE pid = #{pid}
	</select>
	
	<update id="updateCategory">
		UPDATE category
		SET catname = #{catName}
		WHERE catnum = #{catNum}
	</update>
	
	<delete id="deleteCategory">
		DELETE FROM category
		WHERE lft BETWEEN #{lft} AND #{rgt}
	</delete>
	
	<select id="selectCategoryForKeyword" resultType="int">
		SELECT catnum
		FROM category
		WHERE lft = (
			SELECT MIN(lft)
			FROM category
			WHERE catname like '%'||#{keyword}||'%'
		)
	</select>
</mapper>